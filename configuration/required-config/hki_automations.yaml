### Automations

## Automations that you can edit

# Homekit Start Delay (only useful for Homekit users, remove if you don't need/use/have Homekit)
- alias: Start Homekit
  initial_state: 'true'
  trigger:
    - platform: homeassistant
      event: start
  action:
    - delay: 00:03
    - service: homekit.start

# Frontend Header Greeting (If you change this, change the input_select for this as well, use the same names!)
- alias: Frontend Greeting
  trigger:
    - platform: time_pattern
      minutes: "/5"
    - platform: homeassistant
      event: start
  action:
    service: input_select.select_option
    data_template:
      entity_id: input_select.frontend_greeting
      option: >
        {% if (states.sensor.time.state > '00:00') and (states.sensor.time.state < '06:00') %}
          Good Night
        {% elif (states.sensor.time.state > '06:00') and (states.sensor.time.state < '12:00') %}
          Good Morning
        {% elif (states.sensor.time.state > '12:00') and (states.sensor.time.state < '18:00') %}
          Good Afternoon
        {% elif (states.sensor.time.state > '18:00') and (states.sensor.time.state < '23:59') %}
          Good Evening
        {% endif %}

#####################################################################################################
## Automations that you should NOT touch!

# State Change Automations used for device counting
- alias: 'group state change'
  id: 'State changed'
  trigger:
    platform: event
    event_type: state_changed
  condition: 
    condition: or
    conditions:
      - condition: template
        value_template: >
          {{ trigger.event.data.entity_id in state_attr('group.all_lighting','entity_id') }}
      - condition: template
        value_template: >
          {{ trigger.event.data.entity_id in state_attr('group.all_device_switches','entity_id') }}
      - condition: template
        value_template: >
          {{ trigger.event.data.entity_id in state_attr('group.all_radiator_valves','entity_id') }}
      - condition: template
        value_template: >
          {{ trigger.event.data.entity_id in state_attr('group.all_computers','entity_id') }}
      - condition: template
        value_template: >
          {{ trigger.event.data.entity_id in state_attr('group.all_tvs','entity_id') }}
      - condition: template
        value_template: >
          {{ trigger.event.data.entity_id in state_attr('group.all_binary_sensors','entity_id') }}
      - condition: template
        value_template: >
          {{ trigger.event.data.entity_id in state_attr('group.all_laundry_devices','entity_id') }}
      - condition: template
        value_template: >
          {{ trigger.event.data.entity_id in state_attr('group.all_door_sensors','entity_id') }}
      - condition: template
        value_template: >
          {{ trigger.event.data.entity_id in state_attr('group.all_window_sensors','entity_id') }}
  action:
    service: homeassistant.update_entity
    entity_id: 
      - sensor.current_lights_on
      - sensor.current_devices_on
      - sensor.current_radiator_valves_on
      - sensor.current_computers_on
      - sensor.current_tvs_on
      - sensor.current_laundry_devices_on
      - sensor.current_sensors_on
      - sensor.current_doors_open
      - sensor.current_windows_open
      - sensor.current_binary_sensors_on

# Popup More Info Boolean (used in popup windows to show the extra info view)
- alias: light options boolean
  initial_state: 'true'
  trigger:
    - platform: state
      entity_id: input_boolean.light_options
      to: "on"
  action:
    - delay:
        seconds: 15
    - service: input_boolean.turn_off
      data:
        entity_id: input_boolean.light_options

# Theme Selector
- alias: 'themes'
  initial_state: 'true'
  trigger:
    - platform: state
      entity_id: input_select.theme_selector
    - platform: homeassistant
      event: start
    - platform: state
      entity_id: sun.sun
    - platform: state
      entity_id: sensor.anniversary_anniversary
      to: '0'
  action:
    - service: frontend.set_theme
      data_template:
        name: >
          {% if is_state('input_select.theme_selector', 'Silver') %}
            Silver
          {% elif is_state('input_select.theme_selector', 'Space Gray') %}
            Space Gray
          {% elif is_state('input_select.theme_selector', 'Sweet Pink') %}
            Sweet Pink
          {% elif is_state('input_select.theme_selector', 'Valentine') %}
            Valentine
          {% elif is_state('input_select.theme_selector', 'Disable (use theme per user)') %}
            Disable
          {% elif (is_state('sensor.anniversary_anniversary', '0')) and (is_state('input_select.theme_selector', 'Auto'))  %}
            Valentine
          {% elif (is_state('sun.sun', 'above_horizon')) and (is_state('input_select.theme_selector', 'Auto'))  %}
            Silver
          {% elif (is_state('sun.sun', 'below_horizon')) and (is_state('input_select.theme_selector', 'Auto'))  %}
            Space Gray
          {% elif is_state('input_select.theme_selector', 'Auto') %}
            Space Gray
          {% endif %}

# Box Shadow Selector
- alias: input select beautifier box-shadow
  initial_state: 'true'
  trigger:
  - platform: state
    entity_id: input_select.box_shadow_selector
  action:
    service: input_select.select_option
    data_template:
      entity_id: input_select.box_shadow
      option: >
        {% if is_state('input_select.box_shadow_selector', 'None') %}
          none
        {% elif is_state('input_select.box_shadow_selector', 'Small') %}
          1px 1px 1px 0px rgba(0,0,0,0.75)
        {% elif is_state('input_select.box_shadow_selector', 'Standard') %}
          2px 2px 2px 0px rgba(0,0,0,0.75)
        {% elif is_state('input_select.box_shadow_selector', 'Medium') %}
          3px 3px 3px 0px rgba(0,0,0,0.75)
        {% elif is_state('input_select.box_shadow_selector', 'Large') %}
          5px 5px 5px 0px rgba(0,0,0,0.75)
        {% endif %}

# Border Radius Selector
- alias: input select beautifier border-radius
  initial_state: 'true'
  trigger:
  - platform: state
    entity_id: input_select.border_radius_selector
  action:
    service: input_select.select_option
    data_template:
      entity_id: input_select.border_radius
      option: >
        {% if is_state('input_select.border_radius_selector', 'None') %}
          0px
        {% elif is_state('input_select.border_radius_selector', 'Small') %}
          6px
        {% elif is_state('input_select.border_radius_selector', 'Standard') %}
          12px
        {% elif is_state('input_select.border_radius_selector', 'Large') %}
          18px
        {% endif %}
