# lovelace_gen

{% for name, data in _global.view_config.items() %}
- path: {{ name }}
  icon: {{ data.icon|default('mdi:home') }}
  visible: {{ data.show_in_navbar|default('false') }}
  {% if data.title is defined %}
  title: {{ data.title }}
  {% else %}
  title: {{ name|replace("_", " ")|title }}
  {% endif %}
  panel: true
  cards:
    - type: vertical-stack
      cards:
        {% if (data.show_header is undefined) or (data.show_header is true) %}
        - !include
          - templates/header/header-base-template.yaml
          {% if (data.title == 'greeting') %}
            {% raw %}
          - title: "{{ states('sensor.greeting') }}"
            {% endraw %}
          {% elif data.title is defined %}
          - title: {{ data.title }}
          {% else %}
          - title: {{ name|replace("_", " ")|title }}
          {% endif %}
            icon: {{ data.icon|default('mdi:home') }}
            subtitle: "{{ data.subtitle }}"
            {% if data.show_subtitle is false %}
            header_bottom: empty-subtitle.yaml
            {% elif data.subtitle is defined %}
            header_bottom: header-bottom.yaml
            {% else %}
            header_bottom: header-notifications.yaml
            {% endif %}
        {% endif %}
        {% if data.view_selector is defined %}
        - type: custom:layout-card
          {% if ((data.columns is defined) and (data.columns.min_columns is defined)) %}
          min_columns: {{ data.columns.min_columns }}
          max_columns: {{ data.columns.max_columns }}
          {% else %}
          min_columns: 1
          max_columns: 3
          {% endif %}
          layout: horizontal
          cards:
            - type: custom:mod-card
              style: |
                ha-card {
                  margin-left: {{ _global.general_config.margins }};
                  margin-right: {{ _global.general_config.margins }};
                }
              card:
                type: grid
                {% if ((data.columns is defined) and (data.columns.view_selector is defined)) %}
                columns: {{ data.columns.view_selector }}
                {% else %}
                columns: 4
                {% endif %}
                square: false
                cards:
                  {% for name, content in data.view_selector.items() %}
                  - !include
                    - templates/button/view-selector.yaml
                    - name: {{ content.name }}
                      label: "{{ content.button_label|default('&nbsp;') }}"
                      icon: {{ content.icon }}
                      navigation_path: {{ name|replace(".this_view", " ") }}
                      {% if ( ('.this_view' in name) and (content.button_badge is defined) ) %} 
                      template: view-selector-on-style-badge
                      {% elif '.this_view' in name %} 
                      template: view-selector-on-style
                      {% else %}
                      template: view-selector-off-style
                      {% endif %}
                      {% if content.button_badge is defined %}
                      notification: "[[[ if (states['{{ content.button_badge }}'].state == 0) return '&nbsp'; else return `${states['{{ content.button_badge }}'].state}`; ]]]"
                      background_color: "[[[ if (states['{{ content.button_badge }}'].state == 0) return 'rgba(0,0,0,0.0)'; else return 'var(--paper-item-icon-color)'; ]]]"  
                      {% else %}
                      notification: "[[[ if (states['input_number.empty'].state == 0) return '&nbsp'; else return `${states['input_number.empty'].state}`; ]]]"
                      background_color: "[[[ if (states['input_number.empty'].state == 0) return 'rgba(0,0,0,0.0)'; else return 'var(--paper-item-icon-color)'; ]]]"  
                      {% endif %}
                  {% endfor %}
        {% endif %}
        {% if data.show_search_card is defined %}
        - !include includes/search-card.yaml
        {% endif %}
        - type: custom:layout-card
          {% if ((data.columns is defined) and (data.columns.min_columns is defined)) %}
          min_columns: {{ data.columns.min_columns }}
          max_columns: {{ data.columns.max_columns }}
          {% else %}
          min_columns: 1
          max_columns: 3
          {% endif %}
          layout: horizontal
          cards:
            {% if (data.weather is defined) or (data.persons is defined) or (data.simple_weather is defined) %}
            - type: custom:mod-card
              style: |
                ha-card {
                  margin-left: {{ _global.general_config.margins }};
                  margin-right: {{ _global.general_config.margins }};
                }
              card:
                type: vertical-stack
                cards:
                  {% if ((data.simple_weather is defined) and (data.simple_weather.entity is defined)) %}
                  - type: custom:simple-weather-card                    
                    style: |
                      ha-card {
                        border-radius: var(--border-radius);
                        box-shadow: var(--box-shadow);
                        opacity: 0.8;
                        font-size: 12px;
                        font-family: var(--font-family);
                      }                      
                    entity: {{ data.simple_weather.entity }}
                    name: {{ data.simple_weather.city_name }}
                    backdrop: {{ data.simple_weather.backdrop|default('false') }}
                    tap_action:
                      action: navigate
                      navigation_path: {{ data.simple_weather.path|default('weather') }}
                  {% endif %}
                  {% if ((data.weather is defined) and (data.weather.entity is defined)) %}
                  {% if (data.weather.show_title is undefined) or (data.weather.show_title == true) %}
                  - !include
                    - templates/other/title-text.yaml              
                    - name: '&nbsp; {{ data.weather.name|default('Weather Forecast') }}' 
                  {% endif %}
                  - type: weather-forecast
                    style: |
                      ha-card {
                        font-family: var(--font-family);
                        border-radius: var(--border-radius);
                        box-shadow: var(--box-shadow);
                        {% if ((data.weather.show_forecast is defined) and (data.weather.show_forecast is false)) %}
                        max-height: 85px;
                        {% else %}
                        min-height: 85px;
                        {% endif %}
                        opacity: 0.8;
                      }
                    entity: {{ data.weather.entity }}
                    name: {{ data.weather.city_name }}
                    show_forecast: {{ data.weather.show_forecast|default('true') }}
                    tap_action:
                      action: navigate
                      navigation_path: {{ data.weather.path|default('weather') }}
                  {% endif %}
                  {% if data.persons is defined %}
                  - type: grid
                    {% if ((data.columns is defined) and (data.columns.persons is defined)) %}
                    columns: {{ data.columns.persons }}
                    {% else %}
                    columns: 2
                    {% endif %}
                    square: true
                    cards:
                      {% for title, content in data.persons.items() %}
                      - !include
                        {% if (content.travel_time_to_work is defined) or (content.travel_time_to_home is defined) %}
                        - templates/picture-elements/frontpage-photo.yaml
                        {% elif content.phone_battery_sensor is defined %}
                        - templates/picture-elements/frontpage-photo-battery.yaml
                        {% else %}
                        - templates/picture-elements/frontpage-photo-simple.yaml
                        {% endif %}
                        - person: {{ content.entity }}
                          {% if content.path is defined %}
                          navigation_path: {{ content.path }}
                          {% else %}
                          navigation_path: {{ title }}
                          {% endif %}
                          image_path: {{ content.image_path }}
                          alignment: {{ content.alignment }}
                          text_color: {{ content.text_color }}
                          phone_battery_sensor: {{ content.phone_battery_sensor }}
                          travel_time_to_home: {{ content.travel_time_to_home }}
                          travel_time_to_work: {{ content.travel_time_to_work }}
                      {% endfor %}
                  {% endif %}
                  {% if data.persons_alt is defined %}
                  - type: grid
                    {% if ((data.columns is defined) and (data.columns.persons_alt is defined)) %}
                    columns: {{ data.columns.persons_alt }}
                    {% else %}
                    columns: 1
                    {% endif %}
                    square: false
                    cards:
                      {% for title, content in data.persons_alt.items() %}
                      - !include
                        {% if ( (content.phone_battery_sensor is defined) or (content.travel_time_to_work is defined) or (content.travel_time_to_home is defined) ) %}
                        - templates/picture-elements/frontpage-photo.yaml
                        {% else %}
                        - templates/picture-elements/frontpage-photo-simple.yaml
                        {% endif %}
                        - person: {{ content.entity }}
                          {% if content.path is defined %}
                          navigation_path: {{ content.path }}
                          {% else %}
                          navigation_path: {{ title }}
                          {% endif %}
                          image_path: {{ content.image_path }}
                          alignment: {{ content.alignment }}
                          text_color: {{ content.text_color }}
                          phone_battery_sensor: {{ content.phone_battery_sensor }}
                          travel_time_to_home: {{ content.travel_time_to_home }}
                          travel_time_to_work: {{ content.travel_time_to_work }}
                      {% endfor %}
                  {% endif %}
            {% endif %}
            {% if data.favorites is defined %}
            - type: custom:mod-card
              style: |
                ha-card {
                  margin-left: {{ _global.general_config.margins }};
                  margin-right: {{ _global.general_config.margins }};
                }
              card:
                type: vertical-stack
                cards:
                  {% if (data.favorites.show_title is undefined) or (data.favorites.show_title == true) %}
                  - !include
                    - templates/other/title-text.yaml
                    {% if data.favorites.name is defined %}                 
                    - name: '&nbsp; {{ data.favorites.name }}' 
                    {% else %}
                    - name: '&nbsp; Favorites' 
                    {% endif %}
                  {% endif %}
                  - type: grid
                    {% if ((data.columns is defined) and (data.columns.buttons is defined)) %}
                    columns: {{ data.columns.buttons }}
                    {% else %}
                    columns: 3
                    {% endif %}
                    cards:
                      {% for name, data in _global.view_config.items() %}
                      {% if data.show_in_favorites is true %}
                      - !include
                        - templates/button/button-badge.yaml
                        {% if data.title is defined %}
                        - name: {{ data.title }}
                        {% else %}
                        - name: {{ name|replace("_", " ")|title }}
                        {% endif %}
                          label: "{{ data.button_label|default('&nbsp;') }}"
                          icon: {{ data.icon }}
                          navigation_path: {{ name }}
                          {% if data.button_badge is defined %}
                          notification: "[[[ if (states['{{ data.button_badge }}'].state == 0) return '&nbsp'; else return `${states['{{ data.button_badge }}'].state}`; ]]]"
                          background_color: "[[[ if (states['{{ data.button_badge }}'].state == 0) return 'rgba(0,0,0,0.0)'; else return 'var(--paper-item-icon-color)'; ]]]"  
                          {% else %}
                          notification: "[[[ if (states['input_number.empty'].state == 0) return '&nbsp'; else return `${states['input_number.empty'].state}`; ]]]"
                          background_color: "[[[ if (states['input_number.empty'].state == 0) return 'rgba(0,0,0,0.0)'; else return 'var(--paper-item-icon-color)'; ]]]"  
                          {% endif %}
                      {% endif %}
                      {% endfor %} 
            {% endif %}
            {% if data.rooms is defined %}
            - type: custom:mod-card
              style: |
                ha-card {
                  margin-left: {{ _global.general_config.margins }};
                  margin-right: {{ _global.general_config.margins }};
                }
              card:
                type: vertical-stack
                cards:
                  {% if (data.rooms.show_title is undefined) or (data.rooms.show_title == true) %}
                  - !include
                    - templates/other/title-text.yaml
                    {% if data.rooms.name %}                
                    - name: '&nbsp; {{ data.rooms.name }}' 
                    {% else %}
                    - name: '&nbsp; Rooms' 
                    {% endif %}
                  {% endif %}
                  - type: grid
                    {% if ((data.columns is defined) and (data.columns.buttons is defined)) %}
                    columns: {{ data.columns.buttons }}
                    {% else %}
                    columns: 3
                    {% endif %}
                    cards:
                      {% for name, data in _global.view_config.items()|sort %}
                      {% if ( (data.type is defined) and (data.type == 'room') ) %}
                      - !include
                        - templates/button/button-badge.yaml
                        {% if data.title is defined %}
                        - name: {{ data.title }}
                        {% else %}
                        - name: {{ name|replace("_", " ")|title }}
                        {% endif %}
                          label: "{{ data.button_label|default('&nbsp;') }}"
                          icon: {{ data.icon }}
                          navigation_path: {{ name }}
                          {% if data.button_badge is defined %}
                          notification: "[[[ if (states['{{ data.button_badge }}'].state == 0) return '&nbsp'; else return `${states['{{ data.button_badge }}'].state}`; ]]]"
                          background_color: "[[[ if (states['{{ data.button_badge }}'].state == 0) return 'rgba(0,0,0,0.0)'; else return 'var(--paper-item-icon-color)'; ]]]"  
                          {% else %}
                          notification: "[[[ if (states['input_number.empty'].state == 0) return '&nbsp'; else return `${states['input_number.empty'].state}`; ]]]"
                          background_color: "[[[ if (states['input_number.empty'].state == 0) return 'rgba(0,0,0,0.0)'; else return 'var(--paper-item-icon-color)'; ]]]"  
                          {% endif %}
                      {% endif %}
                      {% endfor %} 
            {% endif %}
            {% if data.menu is defined %}
            - type: custom:mod-card
              style: |
                ha-card {
                  margin-left: {{ _global.general_config.margins }};
                  margin-right: {{ _global.general_config.margins }};
                }
              card:
                type: vertical-stack
                cards:
                  {% if (data.menu.show_title is undefined) or (data.menu.show_title == true) %}
                  - !include
                    - templates/other/title-text.yaml
                    {% if data.menu.name is defined %}                
                    - name: '&nbsp; {{ data.menu.name }}' 
                    {% else %}
                    - name: '&nbsp; Menu' 
                    {% endif %}
                  {% endif %}
                  - type: grid
                    {% if ((data.columns is defined) and (data.columns.buttons is defined)) %}
                    columns: {{ data.columns.buttons }}
                    {% else %}
                    columns: 3
                    {% endif %}
                    cards:
                      {% for name, data in _global.view_config.items()|sort %}
                      {% if ( (data.type is not defined) and (data.view_selector is not defined) and (data.show_in_menu is undefined) or (data.show_in_menu is defined) and (data.show_in_menu is true) ) %}
                      - !include
                        - templates/button/button-badge.yaml
                        {% if data.title is defined %}
                        - name: {{ data.title }}
                        {% else %}
                        - name: {{ name|replace("_", " ")|title }}
                        {% endif %}
                          label: "{{ data.button_label|default('&nbsp;') }}"
                          icon: {{ data.icon }}
                          navigation_path: {{ name }}
                          {% if data.button_badge is defined %}
                          notification: "[[[ if (states['{{ data.button_badge }}'].state == 0) return '&nbsp'; else return `${states['{{ data.button_badge }}'].state}`; ]]]"
                          background_color: "[[[ if (states['{{ data.button_badge }}'].state == 0) return 'rgba(0,0,0,0.0)'; else return 'var(--paper-item-icon-color)'; ]]]"  
                          {% else %}
                          notification: "[[[ if (states['input_number.empty'].state == 0) return '&nbsp'; else return `${states['input_number.empty'].state}`; ]]]"
                          background_color: "[[[ if (states['input_number.empty'].state == 0) return 'rgba(0,0,0,0.0)'; else return 'var(--paper-item-icon-color)'; ]]]"  
                          {% endif %}
                      {% endif %}
                      {% endfor %}
            {% endif %}
            {% if data.iframe is defined%}
            - type: custom:mod-card
              style: |
                ha-card {
                  margin-left: {{ _global.general_config.margins }};
                  margin-right: {{ _global.general_config.margins }};
                }
              card:
                type: vertical-stack
                cards:
                  {% if (data.iframe.show_title is undefined) or (data.iframe.show_title == true) %}
                  - !include
                    - templates/other/title-text.yaml              
                    - name: '&nbsp; {{ data.iframe.title|default('iFrame') }}' 
                  {% endif %}
                  - !include
                    - templates/addons/windy-addon.yaml
                    - url: {{ data.iframe.url }}
            {% endif %}
            {% if data.vacuum is defined %}
            - type: custom:mod-card
              style: |
                ha-card {
                  margin-left: {{ _global.general_config.margins }};
                  margin-right: {{ _global.general_config.margins }};
                }
              card:
                type: vertical-stack
                cards:
                  {% if (data.vacuum.show_title is undefined) or (data.vacuum.show_title == true) %}
                  - !include
                    - templates/other/title-text.yaml
                    - name: '&nbsp; {{ data.vacuum.controls_title|default('Controls') }}'
                  {% endif %}
                  - !include
                    - templates/vacuum/controls.yaml
                    - entity: {{ data.vacuum.entity|default('vacuum.roborock_vacuum_s5') }}
                  - !include
                    {% if (data.vacuum.show_mop is undefined) or (data.vacuum.show_mop == true) %}
                    - templates/vacuum/vacuum-addon.yaml
                    {% else %}
                    - templates/vacuum/vacuum-addon-without-mop.yaml
                    {% endif %}
                    - sensor: {{ data.vacuum.fan_speed_sensor|default('sensor.vacuum_fan_speed') }}
                      vacuum: {{ data.vacuum.entity|default('vacuum.roborock_vacuum_s5') }}
            {% endif %}
            {% if data.devices is defined %}
            {% if data.climate is defined %}
            - type: custom:mod-card
              style: |
                ha-card {
                  margin-left: {{ _global.general_config.margins }};
                  margin-right: {{ _global.general_config.margins }};
                }
              card:
                type: vertical-stack
                cards:
                  {% if ( (data.climate.show_title is undefined) or (data.climate.show_title == true) ) %}
                  - !include
                    - templates/other/title-text.yaml
                    - name: '&nbsp; {{ data.climate.title|default('Presets') }}'
                  {% endif %}
                  - type: horizontal-stack
                    cards:
                      {% if ( (data.climate.show_power is undefined) or (data.climate.show_power is true) ) %}
                      - !include
                        - templates/button/service-call-alt.yaml
                        - name: {{ data.climate.name_power|default('Power') }}
                          icon: {{ data.climate.icon_power|default('mdi:power') }}
                          service: climate.turn_off
                          service_entity: all
                      {% endif %}
                      {% if ( (data.climate.show_auto is undefined) or (data.climate.show_auto is true) ) %}
                      - !include
                        - templates/button/service-call-with-option-alt.yaml
                        - name: {{ data.climate.name_auto|default('Auto') }}
                          icon: {{ data.climate.icon_auto|default('mdi:calendar-clock') }}
                          service: climate.set_hvac_mode
                          service_entity: all
                          extra: hvac_mode
                          option: auto
                      {% endif %}
                      {% if ( (data.climate.show_cool is undefined) or (data.climate.show_cool is true) ) %}
                      - !include
                        - templates/button/service-call-with-option-alt.yaml
                        - name: {{ data.climate.name_cool|default('Cool') }}
                          icon: {{ data.climate.icon_cool|default('mdi:air-conditioner') }}
                          service: climate.set_hvac_mode
                          service_entity: all
                          extra: hvac_mode
                          option: cool
                      {% endif %}
                      {% if ( (data.climate.show_heat is undefined) or (data.climate.show_heat is true) ) %}
                      - !include
                        - templates/button/service-call-with-option-alt.yaml
                        - name: {{ data.climate.name_heat|default('Heat') }}
                          icon: {{ data.climate.icon_heat|default('mdi:fire') }}
                          service: climate.set_hvac_mode
                          service_entity: all
                          extra: hvac_mode
                          option: heat
                      {% endif %}
                      {% if ( (data.climate.show_set_temperature is undefined) or (data.climate.show_set is true) ) %}
                      - !include
                        - templates/button/service-call-with-option-alt.yaml
                        - name: "[[[ return `${states['input_number.set_temperature'].state}`; ]]]"
                          entity: input_boolean.set_temperature
                          icon: {{ data.climate.icon_set_temperature|default('mdi:thermometer') }}
                          show_label: true
                          service: climate.set_temperature
                          service_entity: all
                          extra: temperature
                          option: "[[[ return `${states['input_number.set_temperature'].state}`; ]]]"
                          hold_action: more-info
                      {% endif %}
            {% endif %}
            {% for content, items in data.devices.items() %}
            - type: custom:mod-card
              style: |
                ha-card {
                  margin-left: {{ _global.general_config.margins }};
                  margin-right: {{ _global.general_config.margins }};
                }
              card:
                type: vertical-stack
                cards:
                  {% if '.hide' is not in content %}
                  - !include
                    - templates/other/title-text.yaml
                    - name: '&nbsp; {{ content|replace("_", " ")|replace(".lock", " ")|replace(".fan", " ")|replace(".rgb", " ")|replace(".color-temp", " ")|replace(".graph", " ")|replace(".red", " ")|replace(".blue", " ")|replace(".yellow", " ")|replace(".black", " ")|replace(".white", " ")|replace(".purple", " ")|replace(".pink", " ")|replace(".cyan", " ")|replace(".green", " ")|replace(".orange", " ")|replace("_", " ")|title }}'
                  {% endif %}
                  - type: grid
                    {% for device in items %}
                    {% if 'camera.' in device %}
                    {% if ((data.columns is defined) and (data.columns.cameras is defined)) %}
                    columns: {{ data.columns.camera }}
                    {% else %}
                    columns: 1
                    {% endif %}
                    square: false
                    {% elif ('.graph' in device) or ('.graph' in content) %} 
                    {% if ((data.columns is defined) and (data.columns.graphs is defined)) %}
                    columns: {{ data.columns.graphs }}
                    {% else %}
                    columns: 3
                    {% endif %}
                    {% elif 'media_player.' in device %} 
                    {% if ((data.columns is defined) and (data.columns.media_players is defined)) %}
                    columns: {{ data.columns.media_player }}
                    {% else %}
                    columns: 1
                    {% endif %}
                    square: false
                    {% else %}
                    {% if ((data.columns is defined) and (data.columns.buttons is defined)) %}
                    columns: {{ data.columns.buttons }}
                    {% else %}
                    columns: 3
                    {% endif %}
                    {% endif %}
                    {% endfor %}
                    cards:
                      {% for device in items %}
                      {% if 'camera.' in device %}
                      {% if ('vacuum' in device) or ('roborock' in device) or ('rockrobo' in device) or ('rock_robo' in device) or ('ecovac' in device) or ('roomba' in device) %}
                      - !include
                        - templates/vacuum/vacuum_map.yaml
                        - entity: {{ device }}
                          vacuum_entity: {{ data.vacuum.entity }}
                      {% else %}
                      - type: picture-entity
                        style: |
                          ha-card {
                            border-radius: var(--border-radius);
                            box-shadow: var(--box-shadow);
                            overflow: hidden;
                          }
                        aspect_ratio: 16x10.5
                        entity: {{ device|replace(".rgb", " ")|replace(".color-temp", " ")|replace(".lock", " ") }}
                        show_state: false
                      {% endif %}
                      {% elif 'light.' in device %}
                      - !include
                        - templates/button/button.yaml
                        - entity: {{ device|replace(".rgb", " ")|replace(".color-temp", " ")|replace(".lock", " ") }}
                          label: !include includes/brightness-label.yaml
                          grid: light-devices-grid
                          {% if ('.rgb' in device) or ('.rgb' in content) %}
                          template: '../popup-cards/light-rgb.yaml'
                          {% elif ('.color-temp' in device) or ('.color-temp' in content) %}
                          template: '../popup-cards/light-color-temp.yaml'
                          {% else %}
                          template: '../popup-cards/light-switch.yaml'
                          {% endif %}
                      {% elif 'binary_sensor.' in device %}
                      - !include
                        - templates/button/button.yaml
                        - entity: {{ device|replace(".rgb", " ")|replace(".color-temp", " ")|replace(".lock", " ") }}
                          tap_action: more-info
                          hold_action: more-info
                          show_last_changed: true
                      {% elif 'media_player.' in device %}
                      - !include 
                        - templates/addons/media-player-addon.yaml
                        - entity: {{ device }}
                      {% elif ('.graph' in device) or ('.graph' in content) or ('sensor.' in device) %}
                      - !include
                        {% if ('.graph' in device) or ('.graph' in content) %}
                        - templates/other/mini-graph.yaml
                        {% else %}
                        - templates/button/mini-graph.yaml
                        {% endif %}
                        - entity: {{ device|replace(".graph", " ")|replace(".red", " ")|replace(".orange", " ")|replace(".blue", " ")|replace(".yellow", " ")|replace(".black", " ")|replace(".white", " ")|replace(".purple", " ")|replace(".pink", " ")|replace(".cyan", " ")|replace(".green", " ") }}
                          {% if ('.red' in device) or ('.red' in content) %}
                          line_color: red
                          {% elif ('.blue' in device) or ('.blue' in content) %}
                          line_color: blue
                          {% elif ('.yellow' in device) or ('.yellow' in content) %}
                          line_color: yellow
                          {% elif ('.black' in device) or ('.black' in content) %}
                          line_color: black
                          {% elif ('.white' in device) or ('.white' in content) %}
                          line_color: white
                          {% elif ('.purple' in device) or ('.purple' in content) %}
                          line_color: purple
                          {% elif ('.pink' in device) or ('.pink' in content) %}
                          line_color: pink
                          {% elif ('.cyan' in device) or ('.cyan' in content) %}
                          line_color: cyan
                          {% elif ('.orange' in device) or ('.orange' in content) %}
                          line_color: orange
                          {% else %}
                          line_color: green
                          {% endif %}
                          graph_type: line
                          show_extrema: true
                          show_average: true
                          decimals: 2
                          font_size: 65
                      {% elif ('switch.' in device) or ('.fan' in content) or ('.fan' in device) %}
                      - !include
                        - templates/button/button.yaml
                        {% if 'switch.fan' in device %}
                        - entity: {{ device|replace(".rgb", " ")|replace(".color-temp", " ")|replace(".lock", " ")|replace(".fan.fan", ".fan") }}
                        {% else %}
                        - entity: {{ device|replace(".rgb", " ")|replace(".color-temp", " ")|replace(".lock", " ")|replace(".fan", " ") }}
                        {% endif %}
                          template: '../popup-cards/light-switch.yaml'
                          grid: light-devices-grid
                          {% if ('.fan' in device) or ('.fan' in content) %}
                          hold_action: more-info
                          spin_on: true
                          color: DodgerBlue
                          {% endif %}
                      {% elif 'climate.' in device %}
                      - !include
                        - templates/button/thermostat.yaml
                        - entity: {{ device|replace(".rgb", " ")|replace(".color-temp", " ")|replace(".lock", " ") }}
                      {% else %}
                      - !include
                        - templates/button/button.yaml
                        - entity: {{ device|replace(".rgb", " ")|replace(".color-temp", " ")|replace(".lock", " ") }}
                          tap_action: more-info
                          hold_action: more-info
                      {% endif %}
                          {% if ( ('.lock' in device) or ('.lock' in content) ) %}
                          lock: true 
                          {% endif %}
                      {% endfor %}
            {% endfor %} 
        {% endif %}  
            {% if data.remote_control is defined %}
            - type: custom:mod-card
              style: |
                ha-card {
                  margin-left: {{ _global.general_config.margins }};
                  margin-right: {{ _global.general_config.margins }};
                }
              card:
                type: vertical-stack
                cards:
                  {% if ( (data.remote_control.show_title is undefined) or (data.remote_control.show_title == true) ) %}
                  - !include
                    - templates/other/title-text.yaml
                    - name: '&nbsp; {{ data.remote_control.title|default('Remote Control') }}'
                  {% endif %}
                  - !include
                    - templates/other/remote-control.yaml
                    - entity_media_player_sound: {{ data.remote_control.sound_player }}
                      entity_media_player: {{ data.remote_control.media_player }}
                      entity_media_player_remote: {{ data.remote_control.remote }}
                      {% if ((data.remote_control.type is defined) and (data.remote_control.type == 'atv')) %}
                      service: remote.send_command
                      command_up: up
                      command_menu: menu
                      command_left: left
                      command_center: select
                      command_right: right
                      command_back: menu
                      command_down: down
                      command_home: top_menu
                      {% endif %}
            {% endif%}
            {% if data.xbox_controller is defined %}
            - type: custom:mod-card
              style: |
                ha-card {
                  margin-left: {{ _global.general_config.margins }};
                  margin-right: {{ _global.general_config.margins }};
                }
              card:
                type: vertical-stack
                cards:
                  {% if ( (data.xbox_controller.show_title is undefined) or (data.xbox_controller.show_title == true) ) %}
                  - !include
                    - templates/other/title-text.yaml
                    - name: '&nbsp; {{ data.xbox_controller.title|default('Xbox Controller') }}'
                  {% endif %}
                  - !include
                    - templates/addons/xbox-controller-addon.yaml
                    - remote_entity: {{ data.xbox_controller.remote_entity }}
                      xbox_entity: {{ data.xbox_controller.xbox_entity }}
            {% endif %}
            {% if data.google_home is defined %}
            - type: custom:mod-card
              style: |
                ha-card {
                  margin-left: {{ _global.general_config.margins }};
                  margin-right: {{ _global.general_config.margins }};
                }
              card:
                type: vertical-stack
                cards:
                  {% if ( (data.google_home.show_title is undefined) or (data.google_home.show_title == true) ) %}
                  - !include
                    - templates/other/title-text.yaml
                    - name: '&nbsp; {{ data.google_home.title|default('Google Home') }}'
                  {% endif %}
                  - type: entities
                    style: |
                      ha-card {
                        border-radius: var(--border-radius);
                        box-shadow: var(--box-shadow);
                      }
                    show_header_toggle: false
                    entities:
                      {% if data.google_home.all_speakers is defined %}
                      - type: custom:mini-media-player
                        entity: {{ data.google_home.all_speakers }}
                        group: true
                        source: icon
                        icon: mdi:google-home
                        info: short
                        tts:
                          platform: google_translate
                        hide:
                          volume: false
                          power: true
                      {% endif %}
                      {% for device in data.google_home.entities %}
                      - type: custom:mini-media-player
                        entity: {{ device }}
                        group: true
                        tts:
                          platform: google_translate
                        hide:
                          icon: true
                          volume: false
                          controls: true
                      {% endfor %}
            {% endif %}
            {% if data.entities_card is defined %}
            - type: custom:mod-card
              style: |
                ha-card {
                  margin-left: {{ _global.general_config.margins }};
                  margin-right: {{ _global.general_config.margins }};
                }
              card:
                type: vertical-stack
                cards:
                  {% if ( (data.entities_card.show_title is undefined) or (data.entities_card.show_title == true) ) %}
                  - !include
                    - templates/other/title-text.yaml
                    - name: '&nbsp; {{ data.entities_card.title|default('Entities') }}'
                  {% endif %}
                  - type: entities
                    style: |
                      ha-card {
                        border-radius: var(--border-radius);
                        box-shadow: var(--box-shadow);
                        opacity: 0.8;
                      }
                    show_header_toggle: false
                    entities:
                      {% for entity in data.entities_card.entities %}
                      - {{ entity }}
                      {% endfor %}
            {% endif %} 
            {% if data.map is defined %}
            - type: custom:mod-card
              style: |
                ha-card {
                  margin-left: {{ _global.general_config.margins }};
                  margin-right: {{ _global.general_config.margins }};
                }
              card:
                type: vertical-stack
                cards:
                  {% if ( (data.map.show_title is undefined) or (data.map.show_title == true) ) %}
                  - !include
                    - templates/other/title-text.yaml
                    - name: '&nbsp; {{ data.map.title|default('Map') }}'
                  {% endif %}
                  - !include 
                    - templates/addons/map-addon.yaml
                    {% for id, person in data.map.items() %}
                    - entities: {{ person }}
                    {% endfor %}
            {% endif %}
            {% if data.waze is defined %}
            - type: custom:mod-card
              style: |
                ha-card {
                  margin-left: {{ _global.general_config.margins }};
                  margin-right: {{ _global.general_config.margins }};
                }
              card:
                type: vertical-stack
                cards:
                  {% if ( (data.waze.show_title is undefined) or (data.waze.show_title == true) ) %}
                  - !include
                    - templates/other/title-text.yaml
                    - name: '&nbsp; {{ data.waze.title|default('Waze') }}'
                  {% endif %}
                  - !include templates/addons/waze-addon.yaml
            {% endif %}
            {% if data.calendar is defined %}
            - type: custom:mod-card
              style: |
                ha-card {
                  margin-left: {{ _global.general_config.margins }};
                  margin-right: {{ _global.general_config.margins }};
                }
              card:
                type: vertical-stack
                cards:
                  {% if ( (data.calendar.show_title is undefined) or (data.calendar.show_title == true) ) %}
                  - !include
                    - templates/other/title-text.yaml
                    - name: '&nbsp; {{ data.calendar.title|default('Calendar') }}'
                  {% endif %}
                  - type: calendar
                    initial_view: {{ data.calendar.initial_view|default('dayGridMonth') }}
                    style: |
                      ha-card {
                        border-radius: var(--border-radius);
                        box-shadow: var(--box-shadow);
                      }
                    entities: 
                      - {{ data.calendar.entity }} 
            {% endif %}
            {% if data.upcoming_media is defined %}
            {% for content, items in data.upcoming_media.items() %}
            - type: custom:mod-card
              style: |
                ha-card {
                  margin-left: {{ _global.general_config.margins }};
                  margin-right: {{ _global.general_config.margins }};
                }
              card:
                type: vertical-stack
                cards:
                  {% if '.hide' is not in content %}
                  - !include
                    - templates/other/title-text.yaml
                    - name: '&nbsp; {{ content|replace("_", " ")|replace(".hide", " ")|title }}'
                  {% endif %}
                  {% for entity in items %}
                  - type: 'custom:upcoming-media-card'
                    style: |
                      ha-card {
                        border-radius: var(--border-radius);
                        box-shadow: var(--box-shadow);
                      }
                    entity: {{ entity }}
                  {% endfor %}  
            {% endfor %}      
            {% endif %}
            {% if data.certificates is defined %}
            - type: custom:mod-card
              style: |
                ha-card {
                  margin-left: {{ _global.general_config.margins }};
                  margin-right: {{ _global.general_config.margins }};
                }
              card:
                type: vertical-stack
                cards:
                  {% if (data.certificates.show_title is undefined) or (data.certificates.show_title == true) %}
                  - !include
                    - templates/other/title-text.yaml
                    - name: '&nbsp; {{ data.certificates.title|default('Certificates') }}'
                  {% endif %}
                  - !include templates/addons/certificates-addon.yaml
            {% endif %}
            {% if data.battery is defined %}
            - type: custom:mod-card
              style: |
                ha-card {
                  margin-left: {{ _global.general_config.margins }};
                  margin-right: {{ _global.general_config.margins }};
                }
              card:
                type: vertical-stack
                cards:
                  {% if (data.battery.show_title is undefined) or (data.battery.show_title == true) %}
                  - !include
                    - templates/other/title-text.yaml
                    - name: '&nbsp; {{ data.battery.title|default('Battery Levels') }}'
                  {% endif %}
                  - !include
                    - templates/addons/battery-addon.yaml
                    {% if ((data.columns is defined) and (data.columns.battery is defined)) %}
                    - columns: {{ data.columns.battery }}
                    {% else %}
                    - columns: 3
                    {% endif %}
            {% endif %}
        {% if data.custom_cards is defined %}
        {% if data.custom_cards is true %}
        - type: custom:layout-card
          {% if ((data.columns is defined) and (data.columns.min_columns is defined)) %}
          min_columns: {{ data.columns.min_columns }}
          max_columns: {{ data.columns.max_columns }}
          {% else %}
          min_columns: 1
          max_columns: 3
          {% endif %}
          layout: horizontal
          cards:
            !include_dir_merge_list ../hki-user/views/{{ name }}
        {% elif data.custom_cards == "advanced" %}
        - type: vertical-stack
          cards:
            !include_dir_merge_list ../hki-user/views/{{ name }}
        {% endif %}
        {% endif %}
        {% if data.welcome_message is true %}
        - !include settings/welcome-message.yaml
        {% endif %}
        {% if data.hki_menu is defined %}
        - type: custom:layout-card
          min_columns: 1
          max_columns: 3
          layout: horizontal
          cards:
            - !include settings/hki-menu.yaml
        {% endif %}
        - !include includes/gap-height.yaml

{% endfor %}

# About View
- !include settings/about.yaml

# HA Settings View
- !include settings/ha-settings.yaml

# HKI Settings View
- !include settings/hki-settings.yaml