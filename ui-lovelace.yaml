# Custom Card Resources
resources:
  !include lovelace/resources/resources.yaml

# Compact Custom Header
# You will need to hide views if you want to
# have views that behave like popup cards!
cch:
  !include lovelace/cch/compact-custom-header.yaml

# Decluttering Templates
# These are the templates used to avoid too much
# duplicate code.
decluttering_templates:
  !include_dir_named lovelace/templates
  
# Views
# The following 5 views are swipable, the order
# of these 5 files is the swipe order as well.
# The first view is the page 0. In my setup
# the interface defaults to view 1.
title: Home
background: var(--background-image) # This is the background image that will be used in all the views. (currently backgrounds are set in themes, dont edit this if you want themes to work)
views:
  !include_dir_merge_list lovelace/views/ # Changed/Added in 0.13.0 (The views I want to be swipable are now prefixed with a the view number that should come first. E.g. 01.lights.yaml or 04.remote.yaml)
                                          # The lowest number will always be the first view. I have hidden views 5 to 50 so I only have 4 views that are swipable. If you want more/less swipable views you
                                          # should configure the views you want to show/hide in the CCH config (which you can find in folder lovelace/cch). WARNING! If you DO use the header, then you probably
                                          # want to give all views a prefixed name or use the old method instead. This config takes in account that you will not use the header (which is hidden in my config)
                                          # therefor it is only needed to number the views you want to swipe on. The old method will work absolutely fine though. The only difference is, if you want to add a
                                          # view you will not have to set it in this list anymore as it will find it automatically. If for whatever reason you find this unnecessary or too hard to do, please
                                          # use the old method! There is absolutely no benefit to this other than not having to hardcode the views in a list!!